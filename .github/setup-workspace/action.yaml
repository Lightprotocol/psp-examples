name: "Setup workspace"

description:
  "Build the workspace and install all dependencies including Rust, Solana,
  Anchor, NodeJS, and yarn"

inputs:
  rustVersion:
    description: ""
    required: false
    default: "stable"
  solanaVersion:
    description: "the Solana version to install"
    required: false
    default: "stable"
  anchorVersion:
    description: "the Anchor version to install"
    required: false
    default: "0.28.0"
  nodeVersion:
    description: "the NodeJS version to install"
    required: false
    default: "18"

runs:
  using: "composite"
  steps:
    # Install Linux Compilers
    - name: Install Linux Deps
      shell: bash
      run:
        sudo apt-get update && sudo apt-get install -y pkg-config
        build-essential libudev-dev

    # Install Rust Toolchain
    - name: Install Rust Stable
      id: rust_toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ inputs.rustVersion }}
        override: true
        profile: minimal
        components: rustfmt, clippy
    - name: Add Cargo bin to Path
      shell: bash
      run: |
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    - name: Verify Rust install
      shell: bash
      run: |
        echo "Verifying rust '${{ inputs.toolchain }}' ..."
        rustc --version
        cargo --version
        cargo clippy --version
        rustfmt --version
    - name: Share rustc hash
      shell: bash
      run: |
        echo 'RUSTC_HASH=${{ steps.rust_toolchain.outputs.rustc_hash }}' >> $GITHUB_ENV

    # Install Solana Toolchain
    - name: Cache Solana Install
      id: cache-solana-install
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/solana/
          ~/.local/share/solana/
        key: ${{ runner.os }}-Solana-${{ inputs.solanaVersion  }}
    - name: Install Solana
      shell: bash
      if: steps.cache-solana-install.outputs.cache-hit != 'true'
      run:
        sh -c "$(curl -sSfL https://release.solana.com/${{
        inputs.solanaVersion}}/install)"
    - name: Add Solana bin to Path
      shell: bash
      run: |
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    - name: Verify Solana install
      shell: bash
      run: |
        solana --version

    # Install Anchor
    - name: Setup Anchor Cache
      uses: actions/cache@v3
      id: cache-anchor-cli
      if: inputs.anchorVersion != ''
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: anchor-cli-${{ runner.os }}-${{ inputs.anchorVersion }}
    - name: Install Anchor
      shell: bash
      if: steps.cache-anchor-cli.outputs.cache-hit != 'true'
      run:
        cargo install --git https://github.com/coral-xyz/anchor --tag
        v"${{inputs.anchorVersion }}" anchor-cli --locked
    - name: Verify Anchor install
      shell: bash
      run: anchor --version

    # Setup Keypair
    - name: Find or Create Keypair
      shell: bash
      run: |
        find ~/.config/solana/id.json || solana-keygen new -s --no-bip39-passphrase
        echo "DEFAULT_SOLANA_PUBLIC_KEY=$(solana-keygen pubkey ~/.config/solana/id.json)" >> $GITHUB_ENV

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{inputs.nodeVersion }}
        cache: "yarn"